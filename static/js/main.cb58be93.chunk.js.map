{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","titleError","imgUrlError","imdbUrlError","imdbIdError","handleChange","event","setState","target","name","value","movieSubmit","preventDefault","newMovie","props","onAdd","this","onSubmit","addMovie","type","placeholder","onChange","rows","onClick","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb58be93.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './NewMovie.scss';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    titleError: false,\n\n    description: '',\n\n    imgUrl: '',\n    imgUrlError: false,\n\n    imdbUrl: '',\n    imdbUrlError: false,\n\n    imdbId: '',\n    imdbIdError: false,\n  };\n\n  // eslint-disable-next-line\n  handleChange = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n\n    const {\n      title,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n    } = this.state;\n\n    if (!title || !imgUrl || !imdbUrl || !imdbId) {\n      return this.setState({\n        titleError: !title,\n        imgUrlError: !imgUrl,\n        imdbUrlError: !imdbUrl,\n        imdbIdError: !imdbId,\n      });\n    }\n  };\n\n  movieSubmit = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imdbId,\n      imdbUrl,\n      imgUrl,\n    } = this.state;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.props.onAdd(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      titleError,\n      description,\n      imdbId,\n      imdbIdError,\n      imdbUrl,\n      imdbUrlError,\n      imgUrl,\n      imgUrlError,\n    } = this.state;\n\n    return (\n      <form\n        className=\"App__form\"\n        onSubmit={this.addMovie}\n      >\n        <input\n          type=\"text\"\n          placeholder=\"Enter a title\"\n          name=\"title\"\n          className=\"App__text\"\n          value={title}\n          onChange={event => this.handleChange(event)}\n        />\n\n        {titleError\n        && <span className=\"App__error\">Pls enter a title</span>}\n\n        <input\n          type=\"text\"\n          rows=\"4\"\n          placeholder=\"Enter a description\"\n          name=\"description\"\n          className=\"App__text\"\n          value={description}\n          onChange={event => this.handleChange(event)}\n        />\n\n        {/* {!description\n        && <span className=\"App__error\">Pls enter a description</span>} */}\n\n        <input\n          type=\"url\"\n          placeholder=\"Enter a imgUrl\"\n          className=\"App__text\"\n          name=\"imgUrl\"\n          value={imgUrl}\n          onChange={event => this.handleChange(event)}\n        />\n\n        {imgUrlError\n        && (<span className=\"App__error\">Pls enter a imgUrl</span>)}\n\n        <input\n          type=\"url\"\n          placeholder=\"Enter a imdbUrl\"\n          name=\"imdbUrl\"\n          className=\"App__text\"\n          value={imdbUrl}\n          onChange={event => this.handleChange(event)}\n        />\n\n        {imdbUrlError\n        && (<span className=\"App__error\">Pls enter a imdbUrl</span>)}\n\n        <input\n          type=\"text\"\n          placeholder=\"Enter a imdbId\"\n          name=\"imdbId\"\n          className=\"App__text\"\n          value={imdbId}\n          onChange={event => this.handleChange(event)}\n        />\n\n        {imdbIdError\n        && <span className=\"App__error\">Pls enter a imdbId</span>}\n\n        <button\n          type=\"button\"\n          onClick={this.movieSubmit}\n          className=\"App__button\"\n        >\n          Add a new movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}